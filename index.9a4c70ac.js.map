{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,SACME,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,YAAaF,SAASC,cAAc,iBACpCE,cAAeH,SAASC,cAAc,kBACtCG,eAAgBJ,SAASC,cAAc,+BAGzC,EAAAJ,EAAAQ,uBAAsBC,MAAK,SAAAC,GACzBA,EAAKC,KAAI,SAAAC,GACP,IAAMC,EAAS,8EACwCC,OAAfF,EAAKG,UAAU,qBAEvDd,EAAKC,MAAMc,mBAAmB,YAAaH,E,OAG/CZ,EAAKC,MAAMe,iBAAiB,SAE5B,SAAyBC,GACvB,IAAKA,EAAEC,OAAOC,UAAUC,SAAS,iBAC/B,OAEFH,EAAEI,iBAEF,IAAIC,EAAapB,SAASC,cAAc,cAEpCmB,GACFA,EAAWH,UAAUI,OAAO,aAG9BN,EAAEC,OAAOC,UAAUK,IAAI,aAEvB,IAAIC,EAAgBvB,SAASC,cAAc,mBACvCuB,EAAmBT,EAAEC,OAAOS,YAChCF,EAAcE,YAAcD,EAE5B1B,EAAKM,eAAea,UAAUK,IAAI,oBAElC,EAAAzB,EAAA6B,qBAAoBX,EAAEC,OAAOS,aAAanB,MAAK,SAAAC,G,OAqBZG,EArByEH,EAMzFC,KAAI,SAAAmB,G,IAAGC,EAAMD,EAANC,OAAQC,EAAKF,EAALE,MAAOC,EAAUH,EAAVG,WAAYC,EAAGJ,EAAHI,IAEnD,MAAO,2DAG8BpB,OAFeoB,EAAI,4EAECpB,OAApBmB,EAAW,WAEjBnB,OAF0BkB,EAAM,0EAGhClB,OADAkB,EAAM,4CACClB,OAAPiB,EAAO,oB,IAGrCI,KAAK,SAKRlC,EAAKM,eAAe6B,UAAYvB,GADlC,IAAqCA,C,kBC3DrC,IAAAwB,EAAAtC,EAAA,S,aACMuC,G,aAAO,CACX/B,eAAgBJ,SAASC,cAAc,+B,SAG1BmC,I,OAAAA,EAAfC,EAAAH,EAAA,CAAAG,EAAAC,GAAAC,MAAA,SAAAC,EAA8BjC,G,IACxBkC,E,kEAAAA,EAAW,GAEflC,EAAKmC,SAAQ,SAAAC,GACX,IAAIC,EAAc,2EACoDjC,OAA5BgC,EAASE,MAAM,GAAGjC,UAAU,qCAElEF,EAAU,GAEdiC,EAASE,MAAMrC,KAAI,SAAAC,GACjBgC,EAASK,KAAKrC,GACdC,GAEE,0CAGiCC,OAFFF,EAAKsB,IAAI,4EAEkBpB,OAAzBF,EAAKqB,WAAW,WAExBnB,OAFiCF,EAAKoB,MAAM,wEAGtClB,OADNF,EAAKoB,MAAM,gDACOlB,OAAZF,EAAKmB,OAAO,oB,IAG/CgB,EACEA,EACAlC,EACA,6FAAyHC,OAA5BgC,EAASE,MAAM,GAAGjC,UAAU,kCAC3HuB,EAAK/B,eAAeS,mBAAmB,YAAa+B,E,IAGtDG,aAAaC,QAAQ,QAASC,KAAKC,UAAUT,I,4CA7BlBU,MAAAC,KAAAC,U,EAD7B,EAAAxD,EAAAyD,iBAAgBhD,M,SACcC,G,OAAf6B,EAAce,MAAAC,KAAAC,U,IAgC7BlB,EAAK/B,eAAeU,iBAAiB,SAErC,SAAwBC,GACtB,GAA0B,WAAtBA,EAAEC,OAAOuC,SACX,M,gDCzCavD,SAASC,cAAc,kBAE/Ba,iBAAiB,SAE1B,WAA6B,G","sources":["src/js/index.js","src/js/home-category.js","src/js/books-container.js","src/js/adding-to-local-storage.js"],"sourcesContent":["import './home__support';\nimport './home-category';\n\nimport './home__support';\n\nimport './books-container';\nimport './dark-theme';\nimport './modal-window/modal';\nimport './header';\nimport './auth';\nimport './adding-to-local-storage';\nimport './adding-to-local-storage';\n","import { fetchBookCategories, fetchBookByCategory, fetchTopBooks , renderAllCards  } from './books-api';\nconst refs = {\n  divEl: document.querySelector('.category-list'),\n  allcategory: document.querySelector('.all-category'),\n  onecategoryEl: document.querySelector('.category-link'),\n  categoriesList: document.querySelector('.books-in-categories-list'),\n};\n\nfetchBookCategories().then(data => {\n  data.map(book => {\n    const markup = `<li class=\"list category-item\">\n        <a class=\"category-link\" href=\"#\">${book.list_name}</a>\n      </li>`;\n    refs.divEl.insertAdjacentHTML('beforeend', markup);\n  });\n});\nrefs.divEl.addEventListener('click', onCategoryClick);\n\nfunction onCategoryClick(e) {\n  if (!e.target.classList.contains('category-link')) {\n    return;\n  }\n  e.preventDefault();\n\n  let activeBook = document.querySelector('.is-active');\n\n  if (activeBook) {\n    activeBook.classList.remove('is-active');\n  }\n\n  e.target.classList.add('is-active');\n\n  let titleCategory = document.querySelector('.booklist-title');\n  let titleTextContent = e.target.textContent;\n  titleCategory.textContent = titleTextContent;\n\n  refs.categoriesList.classList.add('render-category');\n\n  fetchBookByCategory(e.target.textContent).then(data => renderMarkupBooksByCategory(takeBookMarkupByCategory(data)))\n\n}\n\n\nfunction takeBookMarkupByCategory(books) { \n  let markup = books.map(({ author, title, book_image, _id }) => {\n  \n    return `\n      <li class=\"book-card render-item-card\" data-id=\"${_id}\">\n        <div class=\"thumb\">\n          <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\" loading=\"lazy\" />\n        </div>\n        <h4 class=\"render-title\">${title}</h4>\n        <p class=\"render-author\">${author}</p>\n      </li>`;\n    \n  }).join('');\n  return markup;\n};\n\nfunction renderMarkupBooksByCategory(markup) { \n  refs.categoriesList.innerHTML = markup;\n};","import { fetchTopBooks } from './books-api';\nconst refs = {\n  categoriesList: document.querySelector('.books-in-categories-list'),\n};\nfetchTopBooks().then(renderAllCards);\nasync function renderAllCards(data) {\n  let booksArr = [];\n\n  data.forEach(category => {\n    let markup_base = `<li class=\"category-item\">\n    <h3 class=\"description-book-cont-color\">${category.books[0].list_name}</h3>\n    <ul class=\"bookslist\">`;\n    let markup = ``;\n\n    category.books.map(book => {\n      booksArr.push(book);\n      markup =\n        markup +\n        `\n      <li class=\"book-card\" data-id=\"${book._id}\">\n        <div class=\"thumb\">\n          <img class=\"book-cover\" src=\"${book.book_image}\" alt=\"${book.title}\" loading=\"lazy\" />\n        </div>\n        <h4 class=\"book-title\">${book.title}</h4>\n        <p class=\"author-text-color\">${book.author}</p>\n      </li>`;\n    });\n    markup_base =\n      markup_base +\n      markup +\n      `</ul><div class=\"button-container\" ><button class=\"books-by-category\" data-category-name=\"${category.books[0].list_name}\">See more</button></div></li>`;\n    refs.categoriesList.insertAdjacentHTML('beforeend', markup_base);\n  });\n\n  localStorage.setItem('books', JSON.stringify(booksArr));\n}\n\nrefs.categoriesList.addEventListener('click', onMoreBtnClick);\n\nfunction onMoreBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  //console.log(e.target.getAttribute('data-category-name'))\n}\n","const shoplist = document.querySelector('.modal-add-btn');\n\nshoplist.addEventListener('click', addToLocalStorage);\n\nfunction addToLocalStorage() {\n    \n    \n}"],"names":["parcelRequire","$fepPP","$a366ac799e387d2c$var$refs","divEl","document","querySelector","allcategory","onecategoryEl","categoriesList","fetchBookCategories","then","data","map","book","markup","concat","list_name","insertAdjacentHTML","addEventListener","e","target","classList","contains","preventDefault","activeBook","remove","add","titleCategory","titleTextContent","textContent","fetchBookByCategory","param","author","title","book_image","_id","join","innerHTML","$bpxeT","$81f227f14aa3ea55$var$refs","$81f227f14aa3ea55$var$_renderAllCards","$parcel$interopDefault","$2TvXO","mark","_callee","booksArr","forEach","category","markup_base","books","push","localStorage","setItem","JSON","stringify","apply","this","arguments","fetchTopBooks","nodeName"],"version":3,"file":"index.9a4c70ac.js.map"}