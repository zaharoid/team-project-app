{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,SACA,MAAME,EAAO,CACXC,eAAgBC,SAASC,cAAc,6BACvCC,cAAeF,SAASC,cAAc,oBAiDjC,SAASE,EAAeC,GAM7B,MALa,GAAGA,EAAOC,MAAM,EAAGD,EAAOE,YAAY,+CACdF,EAAOC,MACxCD,EAAOE,YAAY,KACnBF,EAAOG,gB,EAnDb,EAAAV,EAAAW,iBAAgBC,MAChBC,eAA8BC,GAC5B,IAAIC,EAAW,GACfd,EAAKI,cAAcW,UAAYV,EAAe,sBAC9CQ,EAAKG,SAAQC,IACX,IAAIC,EAAc,mEACgBD,EAASE,MAAM,GAAGC,6CAEhDC,EAAS,GAEbJ,EAASE,MAAMG,KAAIC,IACjBT,EAASU,KAAKD,GACdF,GAEE,yDAC8CE,EAAKE,8EAElBF,EAAKG,oBAAoBH,EAAKI,4EAEtCJ,EAAKI,iDACFJ,EAAKK,yBAC7B,IAERV,EACEA,EACAG,EACA,kHAEqDJ,EAASE,MAAM,GAAGC,4DAGzEpB,EAAKC,eAAe4B,mBAAmB,YAAaX,EAAY,IAGlEY,aAAaC,QAAQ,QAASC,KAAKC,UAAUnB,G,IAG/Cd,EAAKC,eAAeiC,iBAAiB,SAErC,SAAwBC,GACtB,GAA0B,WAAtBA,EAAEC,OAAOC,SACX,M,iBC5CJ,MAAMC,EAAO,CACXC,MAAOrC,SAASC,cAAc,kBAC9BqC,YAAatC,SAASC,cAAc,iBACpCsC,cAAevC,SAASC,cAAc,kBACtCF,eAAgBC,SAASC,cAAc,+BAEzC,EAAAJ,EAAA2C,uBAAsB/B,MAAKE,IACzBA,EAAKS,KAAIC,IACP,MAAMF,EAAS,mFAC8BE,EAAKH,6BAElDkB,EAAKC,MAAMV,mBAAmB,YAAaR,EAAO,GAClD,IAGJiB,EAAKC,MAAML,iBAAiB,SAC5B,SAAyBC,GACvB,IAAKA,EAAEC,OAAOO,UAAUC,SAAS,iBAC/B,OAEFT,EAAEU,iBACF,IAAIC,EAAa5C,SAASC,cAAc,cACpC2C,GACFA,EAAWH,UAAUI,OAAO,aAE9BZ,EAAEC,OAAOO,UAAUK,IAAI,aACvB,IAAIC,EAAgB/C,SAASC,cAAc,mBACvC+C,EAAmBf,EAAEC,OAAOe,YAChCF,EAAclC,UAAYV,EAAe6C,GACzCZ,EAAKrC,eAAe0C,UAAUK,IAAI,oBAClC,EAAAjD,EAAAqD,qBAAoBjB,EAAEC,OAAOe,aAAaxC,MAAKE,IAC7CwC,OAkBiChC,EAlBoBR,EAKpDS,KAAI,EAACM,OAAEA,EAAMD,MAAEA,EAAKD,WAAEA,EAAUD,IAAEA,KAC1B,2DAC2CA,4EAEfC,WAAoBC,0EAE1BA,4CACAC,uBAG9B0B,KAAK,SAIRhB,EAAKrC,eAAec,UAAYM,GADlC,IAAqCA,CAlB0B,G,2DCjC9CnB,SAASC,cAAc,kBAE/B+B,iBAAiB,SAE1B,WAA6B","sources":["src/js/index.js","src/js/books-container.js","src/js/home-category.js","src/js/adding-to-local-storage.js"],"sourcesContent":["import './home__support';\nimport './home-category';\n\nimport './home__support';\n\nimport './books-container';\nimport './dark-theme';\nimport './modal-window/modal';\nimport './header';\nimport './auth';\nimport './adding-to-local-storage';\n","import { fetchTopBooks } from './books-api';\nconst refs = {\n  categoriesList: document.querySelector('.books-in-categories-list'),\n  booklistTitle: document.querySelector('.booklist-title'),\n};\nfetchTopBooks().then(renderAllCards);\nasync function renderAllCards(data) {\n  let booksArr = [];\n  refs.booklistTitle.innerHTML = lastWordChange('Best Sellers Books');\n  data.forEach(category => {\n    let markup_base = `<li class=\"category-item\">\n    <h3 class=\"book-category-title\">${category.books[0].list_name}</h3>\n    <ul class=\"bookslist\">`;\n    let markup = ``;\n\n    category.books.map(book => {\n      booksArr.push(book);\n      markup =\n        markup +\n        `\n      <li class=\"book-card book-card-main\" data-id=\"${book._id}\">\n        <div class=\"thumb\">\n          <img class=\"book-cover\" src=\"${book.book_image}\" alt=\"${book.title}\" loading=\"lazy\" />\n        </div>\n        <h4 class=\"book-title\">${book.title}</h4>\n        <p class=book-author-name>${book.author}</p>\n      </li>`;\n    });\n    markup_base =\n      markup_base +\n      markup +\n      `</ul>\n        <div class=\"see-more-btn-container\" >\n        <button class=\"see-more-btn\" data-category-name=\"${category.books[0].list_name}\">See more</button>\n        </div>\n      </li>`;\n    refs.categoriesList.insertAdjacentHTML('beforeend', markup_base);\n  });\n\n  localStorage.setItem('books', JSON.stringify(booksArr));\n}\n\nrefs.categoriesList.addEventListener('click', onMoreBtnClick);\n\nfunction onMoreBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  //console.log(e.target.getAttribute('data-category-name'))\n}\n\nexport function lastWordChange(string) {\n  let markup = `${string.slice(0, string.lastIndexOf(' '))}\n    <span class=\"category-last-word\">${string.slice(\n      string.lastIndexOf(' '),\n      string.length\n    )}</span>`;\n  return markup;\n}\n","import { lastWordChange } from './books-container';\nimport { fetchBookCategories, fetchBookByCategory } from './books-api';\nconst refs = {\n  divEl: document.querySelector('.category-list'),\n  allcategory: document.querySelector('.all-category'),\n  onecategoryEl: document.querySelector('.category-link'),\n  categoriesList: document.querySelector('.books-in-categories-list'),\n};\nfetchBookCategories().then(data => {\n  data.map(book => {\n    const markup = `<li class=\"list category-item\">\n        <a class=\"link category-link\" href=\"#\">${book.list_name}</a>\n      </li>`;\n    refs.divEl.insertAdjacentHTML('beforeend', markup);\n  });\n});\n// refs.allcategory.focus()\nrefs.divEl.addEventListener('click', onCategoryClick);\nfunction onCategoryClick(e) {\n  if (!e.target.classList.contains('category-link')) {\n    return;\n  }\n  e.preventDefault();\n  let activeBook = document.querySelector('.is-active');\n  if (activeBook) {\n    activeBook.classList.remove('is-active');\n  }\n  e.target.classList.add('is-active');\n  let titleCategory = document.querySelector('.booklist-title');\n  let titleTextContent = e.target.textContent;\n  titleCategory.innerHTML = lastWordChange(titleTextContent);\n  refs.categoriesList.classList.add('render-category');\n  fetchBookByCategory(e.target.textContent).then(data =>\n    renderMarkupBooksByCategory(takeBookMarkupByCategory(data))\n  );\n}\nfunction takeBookMarkupByCategory(books) {\n  let markup = books\n    .map(({ author, title, book_image, _id }) => {\n      return `\n      <li class=\"book-card render-item-card\" data-id=\"${_id}\">\n        <div class=\"thumb\">\n          <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\" loading=\"lazy\" />\n        </div>\n        <h4 class=\"render-title\">${title}</h4>\n        <p class=\"render-author\">${author}</p>\n      </li>`;\n    })\n    .join('');\n  return markup;\n}\nfunction renderMarkupBooksByCategory(markup) {\n  refs.categoriesList.innerHTML = markup;\n}\n","const shoplist = document.querySelector('.modal-add-btn');\n\nshoplist.addEventListener('click', addToLocalStorage);\n\nfunction addToLocalStorage() {\n    \n    \n}"],"names":["parcelRequire","$hLzQv","$4a2a19379962dbb9$var$refs","categoriesList","document","querySelector","booklistTitle","$4a2a19379962dbb9$export$c3a8808a3b438752","string","slice","lastIndexOf","length","fetchTopBooks","then","async","data","booksArr","innerHTML","forEach","category","markup_base","books","list_name","markup","map","book","push","_id","book_image","title","author","insertAdjacentHTML","localStorage","setItem","JSON","stringify","addEventListener","e","target","nodeName","$1924252fdcea616a$var$refs","divEl","allcategory","onecategoryEl","fetchBookCategories","classList","contains","preventDefault","activeBook","remove","add","titleCategory","titleTextContent","textContent","fetchBookByCategory","$1924252fdcea616a$var$renderMarkupBooksByCategory","join"],"version":3,"file":"index.ac6cb912.js.map"}