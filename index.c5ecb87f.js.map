{"mappings":"iiBAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,0BACME,EAAO,CACXC,eAAgBC,SAASC,cAAc,6BACvCC,cAAeF,SAASC,cAAc,oB,SAGzBE,I,OAAAA,EAAfC,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,EAA8BC,G,IACxBC,E,kEAAAA,EAAW,GACfX,EAAKI,cAAcQ,UAAYC,EAAe,sBAC9CH,EAAKI,SAAQ,SAAAC,GACX,IAAIC,EAAc,mEAC4CC,OAA5BF,EAASG,MAAM,GAAGC,UAAU,qCAE1DC,EAAU,GAEdL,EAASG,MAAMG,KAAI,SAAAC,GACjBX,EAASY,KAAKD,GACdF,GAEE,yDAGiCH,OAFaK,EAAKE,IAAI,4EAEGP,OAAzBK,EAAKG,WAAW,WAExBR,OAFiCK,EAAKI,MAAM,wEAGzCT,OADHK,EAAKI,MAAM,6CACIT,OAAZK,EAAKK,OAAO,oB,IAG5CX,EACEA,EACAI,EACA,kHAEiFH,OAA5BF,EAASG,MAAM,GAAGC,UAAU,oDAGnFnB,EAAKC,eAAe2B,mBAAmB,YAAaZ,E,IAGtDa,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,I,4CAjClBsB,MAAAC,KAAAC,U,CA8CtB,SAAStB,EAAeuB,GAM7B,MALa,GACwBnB,OADrBmB,EAAOC,MAAM,EAAGD,EAAOE,YAAY,MAAM,2CAIrDrB,OAHiCmB,EAAOC,MACxCD,EAAOE,YAAY,KACnBF,EAAOG,QACP,U,EApDN,EAAAC,EAAAC,iBAAgBC,M,SACchC,G,OAAfL,EAAc4B,MAAAC,KAAAC,U,IAoC7BnC,EAAKC,eAAe0C,iBAAiB,SAErC,SAAwBC,GACtB,GAA0B,WAAtBA,EAAEC,OAAOC,SACX,M,qBC5CEC,EAAO,CACXC,MAAO9C,SAASC,cAAc,kBAC9B8C,YAAa/C,SAASC,cAAc,iBACpC+C,cAAehD,SAASC,cAAc,kBACtCF,eAAgBC,SAASC,cAAc,+BAEzC,EAAAqC,EAAAW,uBAAsBT,MAAK,SAAAhC,GACzBA,EAAKW,KAAI,SAAAC,GACP,IAAMF,EAAS,mFAC6CH,OAAfK,EAAKH,UAAU,qBAE5D4B,EAAKC,MAAMpB,mBAAmB,YAAaR,E,OAI/C2B,EAAKC,MAAML,iBAAiB,SAC5B,SAAyBC,GACvB,IAAKA,EAAEC,OAAOO,UAAUC,SAAS,iBAC/B,OAEFT,EAAEU,iBACF,IAAIC,EAAarD,SAASC,cAAc,cACpCoD,GACFA,EAAWH,UAAUI,OAAO,aAE9BZ,EAAEC,OAAOO,UAAUK,IAAI,aACvB,IAAIC,EAAgBxD,SAASC,cAAc,mBACvCwD,EAAmBf,EAAEC,OAAOe,YAChCF,EAAc9C,UAAYC,EAAe8C,GACzCZ,EAAK9C,eAAemD,UAAUK,IAAI,oBAClC,EAAAjB,EAAAqB,qBAAoBjB,EAAEC,OAAOe,aAAalB,MAAK,SAAAhC,G,OAmBZU,EAlBoBV,EAKpDW,KAAI,SAAAyC,G,IAAGnC,EAAMmC,EAANnC,OAAQD,EAAKoC,EAALpC,MAAOD,EAAUqC,EAAVrC,WAAYD,EAAGsC,EAAHtC,IACjC,MAAO,2DAG4BP,OAFeO,EAAI,4EAECP,OAApBQ,EAAW,WAEjBR,OAF0BS,EAAM,0EAGhCT,OADAS,EAAM,4CACCT,OAAPU,EAAO,oB,IAGrCoC,KAAK,SAIRhB,EAAK9C,eAAeW,UAAYQ,GADlC,IAAqCA,C,8DCnDpBlB,SAASC,cAAc,kBAE/BwC,iBAAiB,SAE1B,WAA6B,G","sources":["src/js/index.js","src/js/books-container.js","src/js/home-category.js","src/js/adding-to-local-storage.js"],"sourcesContent":["import './home__support';\nimport './home-category';\n\nimport './home__support';\n\nimport './books-container';\nimport './dark-theme';\nimport './modal-window/modal';\nimport './header';\nimport './auth';\nimport './adding-to-local-storage';\n","import { fetchTopBooks } from './books-api';\nconst refs = {\n  categoriesList: document.querySelector('.books-in-categories-list'),\n  booklistTitle: document.querySelector('.booklist-title'),\n};\nfetchTopBooks().then(renderAllCards);\nasync function renderAllCards(data) {\n  let booksArr = [];\n  refs.booklistTitle.innerHTML = lastWordChange('Best Sellers Books');\n  data.forEach(category => {\n    let markup_base = `<li class=\"category-item\">\n    <h3 class=\"book-category-title\">${category.books[0].list_name}</h3>\n    <ul class=\"bookslist\">`;\n    let markup = ``;\n\n    category.books.map(book => {\n      booksArr.push(book);\n      markup =\n        markup +\n        `\n      <li class=\"book-card book-card-main\" data-id=\"${book._id}\">\n        <div class=\"thumb\">\n          <img class=\"book-cover\" src=\"${book.book_image}\" alt=\"${book.title}\" loading=\"lazy\" />\n        </div>\n        <h4 class=\"book-title\">${book.title}</h4>\n        <p class=book-author-name>${book.author}</p>\n      </li>`;\n    });\n    markup_base =\n      markup_base +\n      markup +\n      `</ul>\n        <div class=\"see-more-btn-container\" >\n        <button class=\"see-more-btn\" data-category-name=\"${category.books[0].list_name}\">See more</button>\n        </div>\n      </li>`;\n    refs.categoriesList.insertAdjacentHTML('beforeend', markup_base);\n  });\n\n  localStorage.setItem('books', JSON.stringify(booksArr));\n}\n\nrefs.categoriesList.addEventListener('click', onMoreBtnClick);\n\nfunction onMoreBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  //console.log(e.target.getAttribute('data-category-name'))\n}\n\nexport function lastWordChange(string) {\n  let markup = `${string.slice(0, string.lastIndexOf(' '))}\n    <span class=\"category-last-word\">${string.slice(\n      string.lastIndexOf(' '),\n      string.length\n    )}</span>`;\n  return markup;\n}\n","import { lastWordChange } from './books-container';\nimport { fetchBookCategories, fetchBookByCategory } from './books-api';\nconst refs = {\n  divEl: document.querySelector('.category-list'),\n  allcategory: document.querySelector('.all-category'),\n  onecategoryEl: document.querySelector('.category-link'),\n  categoriesList: document.querySelector('.books-in-categories-list'),\n};\nfetchBookCategories().then(data => {\n  data.map(book => {\n    const markup = `<li class=\"list category-item\">\n        <a class=\"link category-link\" href=\"#\">${book.list_name}</a>\n      </li>`;\n    refs.divEl.insertAdjacentHTML('beforeend', markup);\n  });\n});\n// refs.allcategory.focus()\nrefs.divEl.addEventListener('click', onCategoryClick);\nfunction onCategoryClick(e) {\n  if (!e.target.classList.contains('category-link')) {\n    return;\n  }\n  e.preventDefault();\n  let activeBook = document.querySelector('.is-active');\n  if (activeBook) {\n    activeBook.classList.remove('is-active');\n  }\n  e.target.classList.add('is-active');\n  let titleCategory = document.querySelector('.booklist-title');\n  let titleTextContent = e.target.textContent;\n  titleCategory.innerHTML = lastWordChange(titleTextContent);\n  refs.categoriesList.classList.add('render-category');\n  fetchBookByCategory(e.target.textContent).then(data =>\n    renderMarkupBooksByCategory(takeBookMarkupByCategory(data))\n  );\n}\nfunction takeBookMarkupByCategory(books) {\n  let markup = books\n    .map(({ author, title, book_image, _id }) => {\n      return `\n      <li class=\"book-card render-item-card\" data-id=\"${_id}\">\n        <div class=\"thumb\">\n          <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\" loading=\"lazy\" />\n        </div>\n        <h4 class=\"render-title\">${title}</h4>\n        <p class=\"render-author\">${author}</p>\n      </li>`;\n    })\n    .join('');\n  return markup;\n}\nfunction renderMarkupBooksByCategory(markup) {\n  refs.categoriesList.innerHTML = markup;\n}\n","const shoplist = document.querySelector('.modal-add-btn');\n\nshoplist.addEventListener('click', addToLocalStorage);\n\nfunction addToLocalStorage() {\n    \n    \n}"],"names":["parcelRequire","$bpxeT","$81f227f14aa3ea55$var$refs","categoriesList","document","querySelector","booklistTitle","$81f227f14aa3ea55$var$_renderAllCards","$parcel$interopDefault","$2TvXO","mark","_callee","data","booksArr","innerHTML","$81f227f14aa3ea55$export$c3a8808a3b438752","forEach","category","markup_base","concat","books","list_name","markup","map","book","push","_id","book_image","title","author","insertAdjacentHTML","localStorage","setItem","JSON","stringify","apply","this","arguments","string","slice","lastIndexOf","length","$fepPP","fetchTopBooks","then","addEventListener","e","target","nodeName","$a366ac799e387d2c$var$refs","divEl","allcategory","onecategoryEl","fetchBookCategories","classList","contains","preventDefault","activeBook","remove","add","titleCategory","titleTextContent","textContent","fetchBookByCategory","param","join"],"version":3,"file":"index.c5ecb87f.js.map"}