{"mappings":"AAAA,MAYMA,EAAgB,IAEXC,MADK,uDACMC,MAAKC,IACnB,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,ICjBxBC,EAAO,CACXC,eAAgBC,SAASC,cAAc,qBAEzCX,IAAgBE,KAAKU,QAAQC,KAC7Bb,IAAgBE,MAEhBY,eAA8BC,GAC5BA,EAAKC,SAAQC,IACX,IAAIC,EAAc,kCACZD,EAASE,MAAM,GAAGC,6CAEpBC,EAAS,GACbJ,EAASE,MAAMG,KAAIC,IACnBF,GAAkB,uGAGmBE,EAAKC,oBAAoBD,EAAKE,4EAEtCF,EAAKE,0BACzBF,EAAKG,yBACN,IAGRR,EAAcA,EAAcG,EAAS,0EACrCb,EAAKC,eAAekB,mBAAmB,YAAaT,EAAY,G","sources":["src/js/books-api.js","src/js/books-container.js"],"sourcesContent":["const API_URL = `https://books-backend.p.goit.global/`;\n\nconst fetchBookCategories = () => {\n    const url = `${API_URL}books/category-list`;\n    return fetch(url).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    });\n};\n\nconst fetchTopBooks = () => {\n    const url = `${API_URL}books/top-books`;\n    return fetch(url).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    });\n};\n\nconst fetchBookByCategory = bookCategory => {\n    const url = `${API_URL}books/category?category=${bookCategory}`;\n    return fetch(url).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        } else {\n            return response.json();\n        }\n    });\n};\n\nconst fetchBookID= (bookId) => {\n    const url = `${API_URL}books/${bookId}`;\n    return fetch(url).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n        return response.json();\n    });\n};\n\nexport { fetchBookCategories, fetchTopBooks, fetchBookByCategory, fetchBookID };","import { fetchTopBooks } from './books-api'\nconst refs = {\n  categorieslist: document.querySelector('.categories-list'),\n}\nfetchTopBooks().then(console.log);\nfetchTopBooks().then(renderAllCards);\n\nasync function renderAllCards(data) {\n  data.forEach(category => {\n    let markup_base = `<li class=\"category\">\n    <h3>${category.books[0].list_name}</h3>\n    <ul class=\"bookslist\">`\n    let markup = ``;\n    category.books.map(book => {\n    markup = markup + `\n      <li class=\"book-card\">\n        <div class=\"thumb\">\n          <img class=\"book-cover\" src=\"${book.book_image}\" alt=\"${book.title}\" loading=\"lazy\" />\n        </div>\n        <h4 class=\"book-title\">${book.title}</h4>\n        <p>${book.author}</p>\n      </li>`;\n    \n    });\n    markup_base = markup_base + markup + `</ul><div class=\"button-container\"><button>See more</button></div></li>`;\n    refs.categorieslist.insertAdjacentHTML('beforeend', markup_base);\n  });\n}\n"],"names":["$cef2a1ae0ba54a58$export$c257504009eb96bd","fetch","then","response","ok","Error","status","json","$4a2a19379962dbb9$var$refs","categorieslist","document","querySelector","console","log","async","data","forEach","category","markup_base","books","list_name","markup","map","book","book_image","title","author","insertAdjacentHTML"],"version":3,"file":"index.64a30694.js.map"}